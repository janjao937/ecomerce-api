// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customer{
  id String @id @default(cuid())
  firstName String//default varchar = 191
  lastName String
  userName String @unique
  email String
  mobile String
  password String
  cart Cart[]
  game Game[]
  // payment Payment[]
}

model Supplier{
  id String @id @default(cuid())
  firstName String
  lastName String
  userName String @unique
  shopName String @unique
  shopImage String?
  // paymentQrImg String  after "Test" login/register 
  email String
  mobile String
  password String
  product Product[]
  // payment Payment[]
}

model Product{
  id Int @id @default(autoincrement())
  name String 
  title String
  amount Int
  price Int
  img String
  supplierId String
  supplier Supplier @relation(fields: [supplierId],references: [id],onDelete: Cascade)
  // productImg ProductImg[]
  cart Cart[]
}

// model ProductImg{
//   id Int @id @default(autoincrement())
//   img String
//   productId Int 
//   product Product @relation(fields: [productId],references: [id],onDelete: Cascade)
// }

model Cart{
  id Int @id @default(autoincrement())
  amount Int 
  isOrderStatus Int
  productId Int
  product Product @relation(fields: [productId],references: [id],onDelete: Cascade)
  customerId String
  customer Customer @relation(fields: [customerId],references: [id],onDelete: Cascade)
}

model Game{
  id Int @id @default(autoincrement())
  updatedAt DateTime @updatedAt
  heightScore Int
  customerId String
  customer Customer @relation(fields: [customerId],references: [id],onDelete: Cascade)
}

//abount payment
model Admin{
  id String @id @default(cuid())
  username String
  password String
}
// model Payment{
//   id Int @id @default(autoincrement())
  
//   supplierId String
//   supplier Supplier @relation(fields: [supplierId],references: [id],onDelete: Cascade)
//   customerId String
//   customer Customer @relation(fields: [customerId],references: [id],onDelete: Cascade)
//   createdAt DateTime @default(now())

// }

//order 
//adress string
//sendingStatus
//payingStatus
//customerId
//SupplierId
//